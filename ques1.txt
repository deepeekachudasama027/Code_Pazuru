ques 1:

"bool function1(int start, vector<int> adj[], vector<int> &c) \n {",
    "queue<int> q;",
    "q.push(start); \n c[start] = 0;",
    "while (!q.empty()) \n {",
        "int node = q.front();",
        "q.pop();",
        "for (auto it : adj[node]) \n {",
            "if (c[it] == -1) \n {",
                "c[it] = 1 - c[node];",
                "q.push(it); \n }",
            "else if (c[node] == c[it]) \n {",
                "return false; \n } \n } \n",
   "} \n return 1; \n }",

----------------------------------------------

ques 2:

"class Solution \n {",
    "public:",
        "int trap(int A[], int n) \n {",
            "if (0 == n || 1 == n) \n {",
                "return 0; \n }",

            "std::vector<int> maxLeftHeight(n); \n std::vector<int> maxRightHeight(n);",

            "maxLeftHeight[0] = 0; \n for (int i = 1; i < n; ++i)",
		"{ \n maxLeftHeight[i] = std::max(maxLeftHeight[i-1], A[i-1]); \n }",

            "maxRightHeight[n-1] = 0; \n for (int i = n - 2; i >= 0; --i)",
		"{ \n maxRightHeight[i] = std::max(maxRightHeight[i+1], A[i+1]); \n }",

            "int sum = 0; \n for (int i = 0; i < n; ++i) \n {"
                "int boundaryHeight = std::min(maxLeftHeight[i], maxRightHeight[i]);",
                "if (boundaryHeight > A[i]) \n {",
 			"sum += boundaryHeight - A[i]; \n } \n }",

            "return sum;\n }",
"};",





